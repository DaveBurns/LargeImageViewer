<!--
    Before use:
    * be sure to have a 32bit luac installed
    * configure property ${luac} including full path
    * configure property ${svnversion} including full path

    If you want to use the install target:
    * configure property ${lrPluginFolder} including full path
-->
<project
        name="LrLargeImageViewer"
        default="dist"
        basedir="."
        >

    <property file="build_info.properties" />

    <property name="src" location="LrLargeImageViewer.lrdevplugin"/>
    <property name="build" location="build"/>
    <property name="dist"  location="dist"/>

    <property name="pluginFolderName" value="${ant.project.name}.lrplugin" />
    <property name="pluginFolder" location="${build}/${pluginFolderName}"/>
    <property name="pluginDeploymentUnit"  location="${dist}/${pluginFolderName}.zip"/>


    <target name="clean">
        <delete dir="${build}"/>
        <delete dir="${dist}"/>
    </target>


    <target name="init" depends="clean">
        <mkdir dir="${pluginFolder}" />
        <mkdir dir="${dist}"/>
    </target>


    <target name="copy-resources" depends="init">
        <copy todir="${pluginFolder}">
            <fileset dir="${src}" casesensitive="yes">
                <include name="**/*"/>
                <exclude name="**/*.lua" />
            </fileset>
        </copy>

        <!--
        <copy overwrite="true" file="${pluginFolder}/TranslatedStrings_fr.txt" tofile="${pluginFolder}/TranslatedStrings_es.txt" />
        <copy overwrite="true" file="${pluginFolder}/TranslatedStrings_fr.txt" tofile="${pluginFolder}/TranslatedStrings_it.txt" />
        <copy overwrite="true" file="${pluginFolder}/TranslatedStrings_fr.txt" tofile="${pluginFolder}/TranslatedStrings_ja.txt" />
        <copy overwrite="true" file="${pluginFolder}/TranslatedStrings_fr.txt" tofile="${pluginFolder}/TranslatedStrings_ko.txt" />
        <copy overwrite="true" file="${pluginFolder}/TranslatedStrings_fr.txt" tofile="${pluginFolder}/TranslatedStrings_nl.txt" />
        <copy overwrite="true" file="${pluginFolder}/TranslatedStrings_fr.txt" tofile="${pluginFolder}/TranslatedStrings_pt.txt" />
        <copy overwrite="true" file="${pluginFolder}/TranslatedStrings_fr.txt" tofile="${pluginFolder}/TranslatedStrings_sv.txt" />
        <copy overwrite="true" file="${pluginFolder}/TranslatedStrings_fr.txt" tofile="${pluginFolder}/TranslatedStrings_zh_cn.txt" />
        <copy overwrite="true" file="${pluginFolder}/TranslatedStrings_fr.txt" tofile="${pluginFolder}/TranslatedStrings_zh_tw.txt" />
        -->
    </target>


    <!-- For more complete handling of build numbers, see
         http://stackoverflow.com/questions/1431315/build-numbers-major-minor-revision -->
    <target name="modify-version">
        <tstamp />
        <property name="versionString" value="${build.major.number}.${build.minor.number}.${DSTAMP}"/>

        <replaceregexp file="${src}/Info.lua"
                       match="Version:.*"
                       replace="Version: ${versionString}"
                />
        <replaceregexp file="${src}/Info.lua"
                       match="(VERSION.*display *= *)'.*'"
                       replace="\1'${versionString}'"
                />
    </target>


    <target name="compile" depends="copy-resources">
        <apply executable="${luac}" type="file" verbose="true">
            <arg value="-s" />
            <arg value="-o" />
            <targetfile />
            <fileset dir="${src}">
                <include name="**/*.lua" />
                <exclude name="**/*Test*" />
            </fileset>
            <mapper type="glob" from="*.lua" to="${pluginFolder}/*.luac" />
        </apply>
    </target>


    <target name="dist" depends="modify-version, compile">
        <zip destfile="${pluginDeploymentUnit}" basedir="${build}">
            <include name="${pluginFolderName}/**" />
        </zip>
    </target>


    <target name="install" depends="dist">
        <unzip src="${pluginDeploymentUnit}" dest="${lrPluginFolder}" overwrite="true" />
    </target>

</project>